version: '3.7'

services:
  kafka:
    container_name: kafka
    restart: always
    image: confluentinc/cp-kafka:latest
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    restart: always
    ports:
      - 9080:8080
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - '27017:27017'
    env_file:
      - ./envs/.env.mongodb
    volumes:
      - ./mongodb_data:/data/db
  mongoclient:
    image: mongoclient/mongoclient:latest
    container_name: mongoclient
    hostname: mongoclient
    depends_on:
      - mongodb
    ports:
      - 3300:3000
  postgres-keycloak:
    restart: always
    container_name: postgres-keycloak
    image: postgres:latest
    env_file:
      - ./envs/.env.postgres-keycloak
    volumes:
      - ./postgres_keycloak_data:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - ./envs/.env.pgadmin
    depends_on:
      - postgres-keycloak
    ports:
      - 5050:80
    volumes:
      - ./pgadmin:/var/lib/pgadmin

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:20.0.2
    hostname: keycloak
    depends_on:
      - postgres-keycloak
    restart: always
    env_file:
      - ./envs/.env.keycloak
    ports:
      - '8080:8080'
    command: start-dev

  frontend:
    container_name: frontend
    build: ./frontend
    # image: marcotommoro/cc-frontend:arm64
    restart: always
    ports:
      - 3000:3000
    environment:
      KEYCLOAK_HOSTNAME: 'keycloak:8080'
      BROKER_HOSTNAME: 'broker:5001'
    env_file:
      - ./envs/.env.common
    depends_on:
      - keycloak
      - observer
    volumes:
      # - ./frontend/pages:/app/pages
      # - ./frontend/components:/app/components
      - ./frontend:/app

  observer:
    container_name: observer
    # build: ./observer
    image: marcotommoro/cc-observer:arm64
    restart: always
    depends_on:
      - kafka
    env_file:
      - ./envs/.env.mongodb
      - ./envs/.env.mongo-client
      - ./envs/.env.common
    volumes:
      - ./observer/src:/app/src

  broker:
    container_name: broker
    build: ./broker
    restart: always
    ports:
      - 5001:5001
    depends_on:
      - kafka
    environment:
      KEYCLOAK_HOSTNAME: 'keycloak:8080'
    env_file:
      - ./envs/.env.mongodb
      - ./envs/.env.broker
      - ./envs/.env.mongo-client
      - ./envs/.env.common
    volumes:
      - ./broker/src:/app/src
  minio:
    image: minio/minio
    container_name: minio
    command: server /data
    ports:
      - '9000:9000'
    env_file:
      - ./envs/.env.minio
    volumes:
      - ./minio_data:/data
networks:
  default:
    driver: bridge
