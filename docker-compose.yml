version: '2'
services:
  # zookeeper:
  #   image: wurstmeister/zookeeper:latest
  #   ports:
  #     - "2181:2181"
  # kafka:
  #   image: wurstmeister/kafka:2.11-1.1.1
  #   ports:
  #     - "9092:9092"
  #   links:
  #     - zookeeper
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: localhost
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #     KAFKA_DELETE_TOPIC_ENABLE: 'true'
  #     KAFKA_CREATE_TOPICS: "topic-test:1:1"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    container_name: zookeeper
  broker:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    container_name: broker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  web-nextjs:
    build: ./web
    ports:
      - 3000:3000
    volumes:
      - ./web:/app
    container_name: web-nextjs
    environment:
      KAFKA_BROKER: broker:29092
      KAFKA_TOPIC: test
    depends_on:
      - kafka


  # server-express:
  #   build: ./server
  #   ports:
  #     - 3001:3001
  #   volumes:
  #     - .:/app
  #     - /app/node_modules
  #   environment:
  #     - KAFKA_BROKER_LIST=kafka:29092
  #     - KAFKA_TOPIC=topic
  #     - KAFKA_GROUP_ID=group
  #     - KAFKA_CLIENT_ID=client
  #     - KAFKA_CONSUMER=true
  #     - KAFKA_PRODUCER=true
  #   container_name: server-express
  #   command: npm run dev